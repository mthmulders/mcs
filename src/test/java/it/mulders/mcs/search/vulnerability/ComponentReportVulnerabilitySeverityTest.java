package it.mulders.mcs.search.vulnerability;

import java.util.stream.Stream;

import org.assertj.core.api.WithAssertions;
import org.junit.jupiter.api.DisplayNameGeneration;
import org.junit.jupiter.api.DisplayNameGenerator;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

@DisplayNameGeneration(DisplayNameGenerator.ReplaceUnderscores.class)
class ComponentReportVulnerabilitySeverityTest implements WithAssertions {

  private static Stream<Arguments> scores() {
    return Stream.of(
      Arguments.of(9.8, "Critical"),
      Arguments.of(9.0, "Critical"),
      Arguments.of(8.0, "High"),
      Arguments.of(7.0, "High"),
      Arguments.of(5.0, "Medium"),
      Arguments.of(4.0, "Medium"),
      Arguments.of(2.0, "Low"),
      Arguments.of(0.1, "Low"),
      Arguments.of(0.0, "None")
    );
  }

  @ParameterizedTest
  @MethodSource("scores")
  void should_return_correct_severity_for_score(double score, String expectedSeverity) {
    assertThat(ComponentReportVulnerabilitySeverity.getText(score)).isEqualTo(expectedSeverity);
  }
}